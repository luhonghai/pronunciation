buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

android {
    useLibrary 'org.apache.http.legacy'
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    defaultConfig {
        applicationId "com.cmg.android.bbcaccent"
        versionCode 400000
        versionName "4.0"
        minSdkVersion 14
        targetSdkVersion 23
        archivesBaseName = "bbc-accent"
    }
    productFlavors {
    }
    signingConfigs {
        release {
            storeFile file("../keystore/com-cmg-android.keystore")
            storePassword "admincmg@3f"
            keyAlias "com-cmg-android"
            keyPassword "admincmg@3f"
        }
        debug {
            storeFile file("../keystore/com-cmg-android.keystore")
            storePassword "admincmg@3f"
            keyAlias "com-cmg-android"
            keyPassword "admincmg@3f"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    if (project.hasProperty('env')) {
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                output.outputFile = new File(
                        output.outputFile.parent,

                        output.outputFile.name.replace(".apk", "-${env}-v${variant.versionName}.apk")

                )
            }
        }
    } else {
        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                output.outputFile = new File(
                        output.outputFile.parent,

                        output.outputFile.name.replace(".apk", "-v${variant.versionName}.apk")

                )
            }
        }
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:23.1.0'
    compile 'com.android.support:recyclerview-v7:23.1.0'
    compile 'com.android.support:cardview-v7:23.1.0'
    compile 'com.google.code.gson:gson:2.3'
    compile ('cn.pedant.sweetalert:library:1.3') {
        exclude module: 'appcompat-v7'
    }
    compile 'commons-io:commons-io:2.4'
    compile 'com.balysv.materialmenu:material-menu-abs:1.5.0'
    compile 'org.jsoup:jsoup:1.7.3'
    compile project(':facebook')
    compile 'it.sephiroth.android.library.horizontallistview:hlistview:1.2.2'
    compile('com.jjoe64:graphview:4.0.0') {
        exclude module: 'appcompat-v7'
    }
    compile 'com.google.android.gms:play-services:4.+'
    compile 'com.pkmmte.view:circularimageview:1.1'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.easing:library:1.0.1@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.3'
    compile('com.crashlytics.sdk.android:crashlytics:2.2.3@aar') {
        transitive = true;
    }
    compile "cz.msebera.android:httpclient:4.4.1.1"
    compile 'com.luhonghai:litedb:1.1.8'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.anjlab.android.iab.v3:library:1.0.+@aar'
}

task copyFiles(type: Copy)

copyFiles {
    description = 'Copies environment values'
    if (project.hasProperty('env')) {
        from "src/main/resources/env-values/${env}"
    } else {
        from "src/main/resources/env-values/dev"
    }
    into 'src/main/res/values'
    include('**/*')
}
preBuild.dependsOn copyFiles